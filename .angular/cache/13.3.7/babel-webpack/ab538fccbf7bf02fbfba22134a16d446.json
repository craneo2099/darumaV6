{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@awesome-cordova-plugins/barcode-scanner/ngx\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@ionic/storage\";\nimport * as i5 from \"src/app/providers/daruma-service/daruma.service\";\nexport let AddDarumaQrPage = /*#__PURE__*/(() => {\n  class AddDarumaQrPage {\n    constructor(router, barcodeScanner, alertCtrl, toastCtrl, storage, loadingCtrl, route, ds) {\n      this.router = router;\n      this.barcodeScanner = barcodeScanner;\n      this.alertCtrl = alertCtrl;\n      this.toastCtrl = toastCtrl;\n      this.storage = storage;\n      this.loadingCtrl = loadingCtrl;\n      this.route = route;\n      this.ds = ds;\n      this.route.queryParams.subscribe(params => {\n        this.data = this.router.getCurrentNavigation().extras.state;\n        console.log(\"paramsDETAIL\", this.data.token);\n        this.toki = this.data.token;\n      });\n    }\n\n    ionViewWillEnter() {\n      this.barcodeScanner.scan().then(barcodeData => {\n        console.log('Barcode data', barcodeData); // console.log(\"We got a barcode\\n\" +\n        // \"Result: \" + barcodeData.text + \"\\n\" +\n        // \"Format: \" + barcodeData.format + \"\\n\" +\n        // \"Cancelled: \" + barcodeData.cancelled);\n\n        if (barcodeData.cancelled == true) {\n          console.log(\"cancelado\");\n        } else {\n          if (barcodeData.format == \"QR_CODE\") {\n            console.log(\"QR leido\");\n            this.ds.isQrCodeRegistrado(barcodeData.text, this.toki).subscribe(res => {\n              if (res[\"result\"] == true) {\n                let mensaje = \"Codigo Aceptado\"; // console.log(\"existe\");\n\n                console.log(\"resExiste\", res); /////////////Inicio////////////////////////\n\n                this.ds.isQrCodeAsignado(barcodeData.text, this.toki).subscribe(res2 => {\n                  console.log(\"res2\", res2); // devuelve false cuando no existe el qrcode\n\n                  if (res2[\"result\"] == false) {\n                    /////////////Fin/////////////////////////\n                    // console.log(\"no esta usado\");\n                    //se almacena\n                    let nuevoDaruma = {\n                      \"qrCode\": barcodeData.text,\n                      \"token\": this.toki,\n                      \"color\": res2[\"message\"]\n                    };\n                    this.storage.set(\"newDAruma\", nuevoDaruma);\n                    this.presentToast(mensaje);\n                    this.goToFormDaruma(); ///////////////Inicio///////////////////////\n                  } else {\n                    let titulo = \"¡Error!\";\n                    let texto = \"El codigo ya ha sido usado\";\n                    this.doAlert(\"¡Atención!\", texto, \"\"); // quitar comentario\n                    // this.navCtrl.setRoot(DarumasGralPage)\n\n                    this.goToDarumasGral();\n                  }\n                }, error => {\n                  console.log(\"Error isQrCodeAsignado\", error);\n                }); ////////////////Fin////////////////////////\n              } else {\n                let titulo = \"¡Error!\";\n                let texto = \"El codigo es incorrecto\";\n                this.doAlert(\"¡Atención!\", texto, \"\"); // this.navCtrl.setRoot(DarumasGralPage)\n\n                this.goToDarumasGral();\n              }\n            }, error => {\n              console.log(\"Error isQrCodeRegistrado\", error);\n            });\n          } else {\n            this.doAlert(\"¡Atención!\", \"Escanea un Código QR\", \"\");\n            this.goToDarumasGral();\n          }\n        }\n      }).catch(err => {\n        console.log('Error scanner', err);\n      });\n    }\n\n    ngOnInit() {}\n\n    doAlert(titulo, sub, mensaje) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let alert = yield this.alertCtrl.create({\n          header: titulo,\n          subHeader: sub,\n          message: mensaje,\n          backdropDismiss: false,\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n\n    presentToast(text) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let toast = yield this.toastCtrl.create({\n          message: text,\n          duration: 3000,\n          position: 'top'\n        });\n        yield toast.present();\n      });\n    }\n\n    goToFormDaruma() {\n      this.router.navigate(['formulario-daruma']);\n    }\n\n    goToDarumasGral() {\n      this.router.navigate(['darumas-gral']);\n    }\n\n  }\n\n  AddDarumaQrPage.ɵfac = function AddDarumaQrPage_Factory(t) {\n    return new (t || AddDarumaQrPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.BarcodeScanner), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i4.Storage), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i5.DarumaService));\n  };\n\n  AddDarumaQrPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddDarumaQrPage,\n    selectors: [[\"app-add-daruma-qr\"]],\n    decls: 16,\n    vars: 0,\n    consts: [[\"slot\", \"start\"], [\"translucent\", \"true\"], [1, \"ion-no-padding\"], [\"size\", \"12\"], [1, \"ion-text-center\"]],\n    template: function AddDarumaQrPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Agregar Daruma\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(6, \"ion-content\");\n        i0.ɵɵelementStart(7, \"ion-footer\", 1)(8, \"ion-grid\", 2)(9, \"ion-row\")(10, \"ion-col\", 3)(11, \"div\", 4)(12, \"small\");\n        i0.ɵɵtext(13, \"Powered by \");\n        i0.ɵɵelementStart(14, \"b\");\n        i0.ɵɵtext(15, \"Devstar Novatech.\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonBackButton, i3.IonBackButtonDelegate, i3.IonTitle, i3.IonContent, i3.IonFooter, i3.IonGrid, i3.IonRow, i3.IonCol],\n    styles: [\".cuadro[_ngcontent-%COMP%]{box-shadow:0 0 0 500px #0000004d;height:70%;width:70%;border-style:solid;border-color:#3dbd66}.colorFondo2[_ngcontent-%COMP%]{overflow:hidden;width:100%;height:100%}.fondoScannerAltura[_ngcontent-%COMP%]{height:90%}\"]\n  });\n  return AddDarumaQrPage;\n})();","map":null,"metadata":{},"sourceType":"module"}